pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/rammonty/upgrad_project.git'
        IMAGE_TAG = "movies-app:${BUILD_NUMBER}"
        ECR_REPO = "upgread/assignment"
        APP_HOST = "172.31.17.88"
        DOCKERFILE_DIR = "movie-app/client"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'git', url: "${REPO_URL}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                        cd ${DOCKERFILE_DIR}
                        # Build the Docker image
                        docker build -t ${IMAGE_TAG} .
                        
                        # Authenticate Docker with ECR
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 639536574976.dkr.ecr.us-east-1.amazonaws.com
                        
                        # Tag the image with ECR repository URL
                        docker tag ${IMAGE_TAG} ${ECR_REPO}:${BUILD_NUMBER}
                        
                        # Push the image to ECR
                        docker push ${ECR_REPO}:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Deploy to App Host') {
            steps {
                sshagent (credentials: ['app']) {
                    sh '''
                        # SSH into the app server
                        ssh root@${APP_HOST} '
                        # Stop the existing container if it's running
                        docker ps -q --filter "ancestor=${ECR_REPO}:${BUILD_NUMBER}" | xargs -r docker stop
                        
                        # Remove old containers (optional)
                        docker ps -a -q --filter "ancestor=${ECR_REPO}:${BUILD_NUMBER}" | xargs -r docker rm
                        
                        # Pull the new Docker image from ECR
                        docker pull ${ECR_REPO}:${BUILD_NUMBER}
                        
                        # Run the new Docker container
                        docker run -d -p 3000:3000 ${ECR_REPO}:${BUILD_NUMBER}
                        '
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Build, Publish, and Deployment Successful!'
        }
        failure {
            echo 'Build Failed!'
        }
    }
}
